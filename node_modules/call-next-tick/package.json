{
  "name": "call-next-tick",
  "version": "1.1.2",
  "description": "Calls callbacks on next tick so you can avoid craziness from code that expects async to not execute immediately.",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:jimkang/call-next-tick.git"
  },
  "keywords": [
    "async",
    "sync",
    "callback",
    "nexttick"
  ],
  "author": {
    "name": "Jim Kang"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/jimkang/call-next-tick/issues"
  },
  "homepage": "https://github.com/jimkang/call-next-tick",
  "devDependencies": {
    "tape": "^3.0.3"
  },
  "readme": "call-next-tick\n==============\n\n(Formerly conform-async.)\n\nA handy wrapper for `process.nextTick` that you can use to call a callback on the next tick instead of immediate, even though you have the results for callback. [Here's why you'd want to do this](http://nodejs.org/api/process.html#process_process_nexttick_callback) (scroll to \"It is very important...\").\n\nInstallation\n------------\n\n    npm install call-next-tick\n\nUsage\n-----\n    var callNextTick = require('call-next-tick');\n\n    // callback expects to be called async.\n    function getResultForSpecialSituation(id, callback) {\n    \tvar error = null;\n    \tvar constantResult = 'This is always the result';\n\t\tcallNextTick(callback, error, constantResult);\n    }\n\nInstead of:\n\n\t// callback expects to be called async.\n    function getResultForSpecialSituation(id, callback) {\n    \tvar error = null;\n    \tvar constantResult = 'This is always the result';\n    \tprocess.nextTick(function doTheCallWithTheParamsFromTheClosure() {\n    \t\tcallback(error, constantResult);\n    \t});\n\t\tcallNextTick(callback, error, constantResult);\n    }\t\n\nSo, here's the implementation:\n\n\t\tfunction makeCallbackCaller(cb, error, result) {\n\t\t\treturn function callbackCall() {\n\t\t\t\tcb(error, result);\n\t\t\t};\n\t\t}\n\n\t\tfunction callNextTick(cb, error, result) {\n\t\t\tprocess.nextTick(makeCallbackCaller(cb, error, result));\n\t\t}\n\nIt's not much. It's just something I don't want to copy from project to project. :)\n\nTests\n-----\n\nRun tests with `make test`.\n\nLicense\n-------\n\nMIT.\n",
  "readmeFilename": "README.md",
  "_id": "call-next-tick@1.1.2",
  "_shasum": "32d752c6296b4f25992905d2e19e18186e9366ac",
  "_from": "call-next-tick@^1.1.2",
  "_resolved": "https://registry.npmjs.org/call-next-tick/-/call-next-tick-1.1.2.tgz"
}
